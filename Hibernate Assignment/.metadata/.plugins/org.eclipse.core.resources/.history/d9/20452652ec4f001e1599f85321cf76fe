package in.ineuron.repo;

import java.io.Serializable;
import java.util.List;
import java.util.Optional;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.Query;

import in.ineuron.model.Players;
import in.ineuron.util.HibernateUtil;

public class PlayerRepoImpl implements IPlayersRepo {
 
	Session session;
	private Transaction transaction;
	
	@Override
	public String savePlayer(Players player) {
    	boolean flag=false;
    	Integer pno=null;
		try {
    	session=HibernateUtil.getSession();
    	if(session!=null)
    		transaction = session.beginTransaction();
    	if(transaction!=null) {
    	 pno = (Integer) session.save(player);
    	 flag=true;
    	}
		}catch (HibernateException he) {
		  he.printStackTrace();
		}catch (Exception e) {
			e.printStackTrace();
		}finally {
			if(flag==true)
				transaction.commit();
			else {
				transaction.rollback();
			}
			HibernateUtil.closeSession(session);
			HibernateUtil.closeSessionFactory();
		}
		return "Player Record is Saved with Id :: "+pno;
	}


	@SuppressWarnings("unchecked")
	@Override
	public Players findPlayerById(Integer id) {
		boolean flag=false;
		Optional<Players> optional=null;
		try {
			session=HibernateUtil.getSession();
			if(session!=null) {
				Query<Players> query = session.createQuery("From in.ineuron.model.Players where id =:id");
				query.setParameter("id", id);
				optional = query.uniqueResultOptional();
			}
		} catch (HibernateException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return optional.get();
	}

	@Override
	public List<Players> findAllPlayers() {
		// TODO Auto-generated method stub
		return null;
	}

}
